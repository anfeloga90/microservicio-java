name: CI

on:
  push:
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Build
      run: |
        chmod +x gradlew
        ./gradlew build
        ls -ltrh
        

    - name: Run Unit Tests and Check Coverage
      run: |
        ./gradlew test
        ./gradlew build jacocoTestReport
        ls -ltrh

    # - name: Check Code Coverage
    #   run: |
    #     COVERAGE=$(cat build/jacocoHtml/index.html | grep -oP 'Total</td><td class="bar">[^<]+' | grep -oP '[0-9]+')
    #     # Extraer el valor actual y total
    #     valor_actual=$(echo $COVERAGE | cut -d'=' -f2 | cut -d' ' -f1)
    #     valor_total=$(echo $COVERAGE | cut -d'=' -f2 | cut -d' ' -f2)
    #     # Calcular el porcentaje
    #     porcentaje=$(echo "scale=2; ($valor_actual / $valor_total) * 100" | bc | cut -d'.' -f1)
    #     echo porcentaje = $porcentaje
    #     total=$((-$porcentaje+100))

    #     if [ "$total" -lt 70 ]; then
    #       echo "Error: La cobertura de cÃ³digo es inferior al 70% (actual: $total%)."
    #       exit 1
    #     else
    #       echo "Covertura de codigo exitosa. "
    #     fi

    # - name: Sonar cloud Analisis
    #   run: |
    #     echo "inicio de analisis sonar.   "
    #     chmod +x gradlew
    #     ./gradlew build sonar -Dsonar.token=${{ secrets.TOKEN_SONARCLOUD }}

    - name: docker login
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: docker build
      run: |
        chmod 777 build/libs/testing-web-0.0.1-SNAPSHOT.jar
        ls -ltrh build/libs/
        docker build --tag microservicios-java:latest .
        docker build --tag andresfelipe9002/microservicios-java:latest .
        docker images
    
    - name: docker push
      run: |
        docker push andresfelipe9002/microservicios-java
  
  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/checkout@v3
      
      - name: deploy to minikube
        run: | 
          kubectl apply -f deployment.yml
